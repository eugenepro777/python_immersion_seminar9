# from functools import cache

"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
üìå –°–æ–∑–¥–∞–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º.
üìå –ü–∞—Ä–∞–º–µ—Ç—Ä - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π
—Ñ—É–Ω–∫—Ü–∏–∏.
"""


def launch_counter(count):
    counters = []

    def decorator(func):
        def wrapper(*args, **kwargs):
            for _ in range(count):
                counters.append(func(*args, **kwargs))
            return counters

        return wrapper
    return decorator


@launch_counter(7)
def factorial(n: int) -> int:
    print(f'–í—ã—á–∏—Å–ª—è—é —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª {n}!')
    f = 1
    for i in range(2, n + 1):
        f *= i
    return f


# res = launch_counter(7)(factorial)
# print(res(5))


if __name__ == '__main__':
    print(f'{factorial(20) = }')